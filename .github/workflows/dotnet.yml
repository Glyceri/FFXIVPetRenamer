name: Create Release

on:
  push:
    tags:
      - "*.*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        DALAMUD_HOME: /tmp/dalamud
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get Tag Name
        run: echo "tag=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')" >> $GITHUB_ENV

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Download Dalamud Latest
        run: |
          wget https://goatcorp.github.io/dalamud-distrib/latest.zip -O ${{ env.DALAMUD_HOME }}.zip
          unzip ${{ env.DALAMUD_HOME }}.zip -d ${{ env.DALAMUD_HOME }}
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: |
          ver='${{ env.tag }}'
          dotnet build --no-restore --configuration Release --nologo -p:Version=$ver -p:FileVersion=$ver -p:AssemblyVersion=$ver
      - name: write version into jsons
        run: |
          ver='${{ env.tag }}'
          manifest='./PetRenamer/bin/Release/PetRenamer.json'
          json=$(jq --arg ver "$ver" '.AssemblyVersion = $ver' "$manifest")
          echo "$json" > "$manifest"
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          path: |
            ./PetRenamer/bin/Release/PetRenamer/latest.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: PetRenamer ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PetRenamer/bin/Release/PetRenamer/latest.zip
          asset_name: PetRenamer.zip
          asset_content_type: application/zip

      - name: Write out repo.json
        run: |
          ver='${{ env.tag }}'
          repo='./repo.json'
          jq --arg ver "$ver" '.[0].AssemblyVersion = $ver | .[0].TestingAssemblyVersion = $ver' $repo > temp.json && mv temp.json $repo
          sed -i "s|[^/]\+/PetRenamer.zip|$ver/PetRenamer.zip|g" $repo
        shell: bash

      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin main
          git reset --hard ${{ github.sha }}
          git checkout main
          git add repo.json
          git commit -m "[CI] Updating repo.json for ${{ env.tag }}" || true
          git push origin main
